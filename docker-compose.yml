services:
  app:
    build: .
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    ports: 
      - "4002:4000"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "/app/api", "healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  database:
    image: mongo:6.0
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - db-data:/data/db
    healthcheck:
      test: mongosh --eval 'db.adminCommand("ping").ok' -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --quiet
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  data-explorer:
    image: mongo-express:latest
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${DB_URI}
      ME_CONFIG_BASICAUTH: false
    depends_on:
      database:
        condition: service_healthy

volumes:
  db-data:
    name: flho_db_data

networks:
  default:
    name: flho_network
